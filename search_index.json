[["index.html", "Two-dimensional systematic survey estimators Chapter 1 Introduction", " Two-dimensional systematic survey estimators C.Marsh 2022-06-27 Chapter 1 Introduction This Gitbook serves two purposes, firstly to demonstrate how to use the R package the second is the give some theory and equations for the functions in the package. "],["two-dimensional-systematic-surveys.html", "Chapter 2 Two dimensional systematic surveys", " Chapter 2 Two dimensional systematic surveys Two-dimensional systematic surveys are a commonly applied survey design for estimating the abundance of spatial populations (Millar and Olsen 1995; R. M. Fewster 2011). Systematic surveys enforce a uniform sampling pattern over the entire spatial domain. Unlike random sampling, systematic surveys avoid over and under sampling space. Systematic surveys can have the advantage over random sampling strategies of being more practical to implement, and in simulation studies, the estimated population density has been shown to provide considerably lower variance than random designs under many conditions e.g., McGarvey, Burch, and Matthews (2016). However, the most common systematic survey design consists of just a single primary sampling unit (PSU) and consequently there is no applicable design-based estimator of this variance. This has led to the development and application of several approximations based on variations of design-based variance estimators designed for random sample designs (Wolter 1984; D’Orazio 2003). Example of systematic survey. Blue rectangles are sampling units The only randomly selected sampling unit from Consider a spatial survey region \\(\\mathcal{D} \\subset \\mathbb{R}^2\\) of area \\(A\\). For simplicity \\(i\\) indexes a sampling unit (quadrat) that is spatially referenced by coordinates in \\(\\mathcal{D}\\). A two-dimensional systematic survey that is based on a single PSU requires the specification of the location of the first sampling unit, from which the location of all other sampling units are deterministically specified. The response variable in this setting is either numbers (abundance) or weight (biomass) in each of the \\(n\\) sampling units denoted by \\(\\boldsymbol{y} = (y_1,y_2,\\dots, y_n)^T\\). The population characteristic of focus is the total population within the survey region, denoted by \\(N\\), or equivalently the mean density over \\(\\mathcal{D}\\), \\(d_\\mathcal{D}=N/A\\). If \\(\\alpha\\) is the area of each sampling unit then \\(y_\\mathcal{D}=\\alpha d_\\mathcal{D}\\) is the expected mean value. Then, \\(N=\\kappa y_\\mathcal{D}\\) where \\(\\kappa=A/\\alpha\\) is the inverse of the sampling fraction. Design-based methods applied to systematic surveys all use the sample mean estimator of \\(y_\\mathcal{D}\\), \\(\\bar{y}=\\sum\\limits_{i = 1}^{n} y_i/n\\), and hence the estimator \\(\\widehat{N}=\\kappa \\bar{y}\\) of \\(N\\), with variance estimator \\[ \\widehat{\\rm var} \\left(\\widehat{N}\\right) = \\kappa^2 \\widehat{\\rm var}(\\bar{y}) \\ . \\] In systematic surveys with multiple PSUs the systematic design-based variance estimator (\\(\\widehat{\\rm var}_{sys}(\\bar{y})\\)) is known and follows, \\[\\begin{equation*}\\label{eq:exact_var} \\widehat{\\rm var}_{sys}(\\bar{y}) = \\frac{1}{B}\\sum\\limits_{b = 1}^{B} \\left(\\bar{y}_{b} - \\bar{y}\\right)^2 \\end{equation*}\\] where, \\(b=1,\\dots,B\\) are the PSUs, each assumed to contain the same number of sampling units, and \\(y_b\\) is the sample mean within PSU \\(b\\). However, \\(B\\) is typically a relatively small number, so this estimated variance generally has few degrees of freedom. %, For the systematic design of interest in this study there is just a single PSU (the position of the first quadrat) and hence no design-based variance estimator exists. For this reason, as shown below, some authors have explored the use of the simple random sampling (SRS) variance estimator, ad-hoc estimators utilizing stratified random survey variance estimators (Millar and Olsen 1995; Strand 2017) and adjusted SRS variance estimators (Ambrosio Flores, Iglesias Martı́nez, and Marı́n Ferrer 2003; Strand 2017; Brus and Saby 2016; McGarvey, Burch, and Matthews 2016). References "],["estimatrs.html", "Chapter 3 Estimators 3.1 Simple Random Sample (design-based) 3.2 Post-stratification (design-based) 3.3 Correlation adjustment (hybrid) 3.4 Boxlet estimator (hybrid) 3.5 Geostatistical model-based estimator (model-based)", " Chapter 3 Estimators 3.1 Simple Random Sample (design-based) The simplest approach is to treat the data as if all points were collected from a SRS design, and to use the usual SRS variance estimator, \\[\\begin{equation}\\label{eq:srs_var} \\widehat{\\rm var}_{srs}(\\bar{y}) = \\frac{s^2_y}{n} = \\frac{1}{n(n - 1)}\\sum\\limits_{i=1}^n \\left(y_i - \\bar{y}\\right)^2 \\ . \\end{equation}\\] Several simulation studies have demonstrated that this estimator tends to over-estimate the true variance, and the over-estimation can be substantial when positive autocorrelation exists (R. M. Fewster 2011; Dunn and Harrison 1993). 3.2 Post-stratification (design-based) This class of estimators was proposed by Wolter (1984) and has been extended to systematic spatial surveys e.g., Dunn and Harrison (1993) R. M. Fewster (2011), Millar and Olsen (1995). Each stratum contains a fixed number of neighbouring sampled units from the systematic design, and the stratified random sample variance estimator of \\(\\bar{y}\\) is used (Rachel M. Fewster et al. 2009) (this is ad-hoc because stratified designs assume simple random sampling within strata). (Millar and Olsen 1995) provided a variation on this approach, by showing that it could be applied using strata that overlapped. Consider \\(H\\) overlapping strata where \\(h = (1,2,\\dots,H)\\) index the strata, and let stratum \\(h\\) contain \\(n_h\\) sampling units (in this case \\(n_h = 4\\) in Figure~). %Delete or add Figure Let the set of sampling units in strata \\(h\\) be denoted by the set \\(S_h\\). Then the post-stratified estimate of variance is \\[\\begin{equation}\\label{strata_var} \\widehat{\\rm var}_{str}(\\bar{y}) = \\sum\\limits_{h = 1}^H w_h^2 \\frac{s^2_h}{n_h} \\ , \\end{equation}\\] where \\[ s^2_h = \\frac{1}{n_h-1} \\sum\\limits_{i \\in S_h} (y_i - \\bar{y_h})^2, \\text{ and } w_h = \\frac{n_h}{\\sum_h n_h} \\ . \\] This formulation follows from Millar and Olsen (1995) and assumes overlapping strata. However, there are alternative overlapping and non-overlapping post-stratified variance estimators (see D’Orazio (2003)). These alternative estimators are due in part to their original application for one dimensional systematically sampled data (Wolter 1984). As discussed by D’Orazio (2003), extending these one-dimensional estimators to two-dimensions is not straightforward. Example of systematic survey. Blue rectangles are sampling units 3.3 Correlation adjustment (hybrid) Defined in Wolter (1984) and investigated for spatial systematic samples (Ambrosio Flores, Iglesias Martı́nez, and Marı́n Ferrer 2003; Strand 2017; Brus and Saby 2016; McGarvey, Burch, and Matthews 2016), this estimator makes an adjustment to \\(Var_{srs}(\\bar{y})\\) (Equation~) based on the amount of spatial auto-correlation that exists in the systematic sample. \\[\\begin{align}\\label{eq:adjust_corr} \\widehat{\\rm var}_{adj}(\\bar{y}) =&amp; \\widehat{\\rm var}_{srs}(\\bar{y}) \\bigg[1 + \\frac{2}{ln({\\rho})} + \\frac{2}{({\\rho}^{-1} - 1)}\\bigg]&amp; \\text{if }{\\rho} &gt; 0\\\\ =&amp; \\widehat{\\rm var}_{srs}(\\bar{y})&amp; \\text{if }{\\rho} \\leq 0 \\ .\\nonumber \\end{align}\\] %, Here, \\({\\rho}\\) is often substituted for by an estimate of global spatial-autocorrelation such as the commonly used Morans I . 3.4 Boxlet estimator (hybrid) The boxlet method proposed by R. M. Fewster (2011)} fits a density surface to the spatial domain \\(\\mathcal{D}\\) using a two-dimensional generalised additive model (GAM) (Wood 2017). For any possible location, \\(b\\), of the first quadrat, this enables calculation of the expected total count within the sampled quadrats, \\(\\eta_b\\) and within \\(\\mathcal{D}\\), \\(\\eta_\\mathcal{D}\\). This calculation is done using finite approximation over a fine lattice within \\(\\mathcal{D}\\) (these lattice points correspond to the centroids of the so-called boxlets). Let \\(p_b=\\eta_b/\\eta_\\mathcal{D}\\) denote the proportion of the expected total count that is expected within the sampled quadrats. Let \\(y^+=\\sum_{i=1}^n y_i\\) be the number of individuals counted in the systematic sample. The boxlet method partitions the variance of \\(y^+\\) using the law of total variance (Equation (3.1)). The first term (\\({\\rm var}_b(E[y^+|b])\\)) is the variance in the expected value of \\(y^+\\) due to the possible starting position, \\(b\\), of the first quadrat. The second component (\\(E_b[{\\rm var}(y^+|b)]\\)) quantifies the expected (over \\(b\\)) magnitude of the variability in \\(y^+\\) for a given \\(b\\), \\[\\begin{equation} {\\rm var}(y^+) = {\\rm var}_{b}(E[y^+|b]) + E_{b}[{\\rm var}(y^+|b)] \\tag{3.1} \\end{equation}\\] Under the assumption that the counts in each quadrat are Poisson distributed, then given \\(b\\) it follows that \\(y^+\\) is binomially distributed according to a \\({\\rm Bin}(N,p_b)\\) distribution. This gives \\[\\begin{align} {\\rm var}(y^+) &amp;= {\\rm var}_{b}(N p_b) + E_{b}[Np_b(1 - p_b)] \\nonumber \\\\ &amp;= E_{b}[N^2 p_b^2] + E_{b}[N p_b]^2 + E_{b}[Np_b(1 - p_b)] \\label{eq:BoxletVar} \\end{align}\\] The boxlet method estimates \\({\\rm var}(y^+)\\) by substituting \\(N\\) with \\(\\widehat{N}\\), and numerically evaluating the \\(E_b\\) and \\({\\rm var}_b\\) terms (that is, with respect to variability in \\(p_b\\)) over all boxlet centroids within the scope of placement of the first quadrat. This leads to the boxlet variance estimator \\(y^+\\) and hence for \\(\\bar{y}\\), \\[\\begin{equation} \\widehat{\\rm var}_{box}(\\bar{y}) = \\frac{\\widehat{\\rm var}_{box}(y^+)}{n^2} \\end{equation}\\] 3.5 Geostatistical model-based estimator (model-based) The geostatistical model-based approach partitions the spatial domain \\(\\mathcal{D}\\) into \\(m &gt;&gt; n\\) quadrats, with abundances (at the time of the survey) of \\(\\boldsymbol{y}=\\{y_i, i= 1, \\dots, m\\}\\), and hence \\(N=\\sum_i^m y_i\\). The abundances are assumed to be a realisation from a model, \\[\\begin{equation*} \\boldsymbol{y} \\sim f\\left(\\boldsymbol{X}, \\boldsymbol{\\theta}\\right) \\ , \\end{equation*}\\] with auxiliary covariates denoted by \\(\\boldsymbol{X}\\) and model parameters denoted by \\(\\boldsymbol{\\theta}\\). This natural incorporation of auxiliary covariates is often viewed as an advantage for the model-based approach (Johnson, Laake, and Ver Hoef 2010; Chambers and Clark 2012; Ståhl et al. 2016; Shelton et al. 2014). Let \\(\\Omega\\) be the index of the set of \\(n\\) sampling units selected by the systematic survey. The estimate of total population can be decomposed as \\[\\begin{equation} \\widehat{N} = \\sum\\limits_{i \\in \\Omega} y_i + \\sum\\limits_{j \\notin \\Omega} E[y_j| y_i, i \\in \\Omega] \\ .\\tag{3.2} \\end{equation}\\] The \\(y_i, i \\in \\Omega\\) are known and so inference on un-sampled units \\(y_j, j \\notin \\Omega\\) is the goal. Geostatistical models have been used with systematic surveys primarily in the acoustic literature Walline (2007); Simmonds and Fryer (1996) but also in land cover use Aune-Lundberg and Strand (2014). These studies used kriging equations for model inference, which differs from the SPDE approach Lindgren, Rue, and Lindström (2011) that is used for geostatistical models presented here (see Chatper 7 Gómez-Rubio (2020) and Chang, Guillas, and Fioletov (2015) for more detail on the difference between these two approaches). The SPDE approach was chosen for its flexibility in response variable distributions, flexibility in incorporating spatio-temporal GFs, ease of including covariates and availability of convenient software for its implementation, i.e. INLA Lindgren and Rue (2015). The software chosen to implement the spatial model, and estimator for the total population (Equation~(3.2)) and corresponding variance was Template Model Builder (TMB) (Kristensen et al. 2016). TMB was chosen for its ease of implementing bespoke models (Equation~(3.2) only involves using a subset of fitted values) and computational speed (Muff, Signer, and Fieberg 2020) required for the purpose of performing 1 000’s of simulations. TMB also has many inbuilt features that enhance its applicability. This includes automatic calculation of standard errors for functions of parameters using Taylor series expansion, which is commonly known as the generalised delta-method Millar (2011);Fournier et al. (2012)). TMB also includes the “epsilon” method of bias correction (Tierney, Kass, and Kadane 1989; Thorson and Kristensen 2016), which approximates the integral that equates to the expectation of non-linear functions of random-effect variables. Thorson and Kristensen (2016) showed the “epsilon” method to be superior to other bias correction methods commonly used within fisheries models for estimating abundance. Using these estimators of variance, TMB will automatically report estimates of \\({SE}\\left[\\widehat{N}\\right]\\). For spatially variable populations it is often better to estimate and provide standard errors for \\(\\log \\widehat{N}\\), which has generally been found to be more quadratic Bolker et al. (2013). When \\(\\log \\widehat{N}\\) is of focus, confidence intervals are \\[\\begin{equation} CI_{95\\%} = exp \\left(\\log \\widehat{N} \\pm 1.96 \\ \\widehat{SE}\\left[\\log \\widehat{N}\\right]\\right) \\ . \\end{equation}\\] Considerations when using model-based estimators include; assessing sensitivity to starting values, model convergence, model selection, goodness of fit, etc. As in all regression analysis, these are expected for any valid inferences. References "],["simulations-with-systematicsurvey.html", "Chapter 4 Simulations with systematicsurvey 4.1 SRS estimator 4.2 Correlation adjusted estimator 4.3 Boxlet estimator 4.4 Geostatistical estimator", " Chapter 4 Simulations with systematicsurvey library(ggplot2) library(INLA) library(raster) library(rgeos) library(rgdal) library(systematicsurvey) # can install it using ## devtools::install_github(&quot;Craig44/systematicsurvey&quot;) set.seed(123) ## Assume a square domain survey_xlim = c(0,100) survey_ylim = c(0,100) # simualted population size N = 5e5 ## spatial distribution beta1 = c(4,1) beta2 = c(1,4) survey_area = diff(survey_ylim) * diff(survey_xlim) # Area of survey ## create a polygon s_poly = Polygon(cbind(x = c(survey_xlim[1],survey_xlim[1],survey_xlim[2],survey_xlim[2]), y = c(survey_ylim[1],survey_ylim[2],survey_ylim[2],survey_ylim[1]))) s_polys = Polygons(list(s_poly),1) sp_survey_poly = SpatialPolygons(list(s_polys)) ## add projection coordinater here if you are using survey_area = rgeos::gArea(sp_survey_poly) survey_polygon = sp_survey_poly ## sampling unit quad_width = 0.5 quad_height = 0.5 quad_x_spacing = 10 ## spacings between quadrant/transect midpoints quad_y_spacing = 10 ## spacings between quadrant/transect midpoints sampling_unit_area = quad_width * quad_height boxlet_diameter = quad_width ## will define how many boxlets there are, should be less than quadrant size kappa = survey_area / sampling_unit_area ## sampling fraction ## variables that define the toal number of sampling units n_col = max(survey_xlim) / quad_x_spacing # r n_row = max(survey_ylim) / quad_y_spacing # r n_strata = n_row * n_col n_l = quad_y_spacing / quad_height# l n_k = quad_x_spacing / quad_width # k n_quads = n_l * n_row * n_col * n_k within_rows = rep(1:n_l, n_k) within_cols = sort(rep(1:n_k, n_l)) ## lower and upper limits for discrete non-overlapping quadrats quad_x = seq(0,max(survey_xlim), by = quad_width) quad_y = seq(0,max(survey_ylim), by = quad_height) # create a raster layer with all projection spaces proj_raster &lt;- raster(resolution = quad_width, xmn = survey_xlim[1], xmx = survey_xlim[2], ymn = survey_ylim[1], ymx = survey_ylim[2]) proj_poly &lt;- rasterToPolygons(proj_raster, dissolve=F) ## simulate spatial distribution x_coord = rbeta(N, beta1[1], beta1[2]) * max(survey_xlim) y_coord = rbeta(N, beta2[1], beta2[2]) * max(survey_ylim) ## rasterize pop_raster &lt;- rasterize(x = cbind(x_coord, y_coord), y = proj_raster, field = 1, fun = &quot;sum&quot;, na.rm = T) pop_raster_pts &lt;- rasterToPoints(pop_raster, spatial = TRUE) # Then to a &#39;conventional&#39; dataframe pop_df &lt;- data.frame(pop_raster_pts) ggplot() + geom_tile(data = pop_df , aes(x = x, y = y, fill = layer)) + ggtitle(&quot;Population&quot;) + labs(x = &quot;&quot;, y = &quot;&quot;, fill = &quot;Abundance&quot;) Now simulate a two-dimensional systematic survey with a single PSU. PSU = sample(1:length(within_cols), size = 1) # convert cols and rows to survey units within_x = within_cols[PSU] * quad_width within_y = within_rows[PSU] * quad_height upper_x1 = seq(from = within_x, to = survey_xlim[2], by = quad_x_spacing) upper_y1 = seq(from = within_y, to = survey_ylim[2], by = quad_y_spacing) upper_x = rep(upper_x1, length(upper_y1)) upper_y = sort(rep(upper_y1, length(upper_x1))) sample_y_coord = upper_y - quad_height / 2 sample_x_coord = upper_x - quad_width / 2 ## data frame Data = data.frame(x_mid = sample_x_coord, y_mid = sample_y_coord) Data$y_i = NA counter = 1; ## population in sampling units for(i in 1:length(upper_x)) { Data$y_i[i] = sum(x_coord &gt;= (upper_x[i] - quad_width) &amp; x_coord &lt;= upper_x[i] &amp; y_coord &gt;= (upper_y[i] - quad_height) &amp; y_coord &lt;= upper_y[i]) } Data$area = quad_height * quad_height ## convert to densities Data$d_i = Data$y_i / Data$area ## convert it to spatial data frame coordinates( Data ) &lt;- ~ x_mid + y_mid ## can also add projection of data if working lat longs etc # proj4string(Data) &lt;- CRS(&quot;+init=epsg:4326&quot;) ## calculate sample raster sample_raster &lt;- rasterize(x = cbind(sample_x_coord, sample_y_coord), y = proj_raster, field = 1, fun = &quot;sum&quot;, na.rm = T) ## calculate polygons samp_poly &lt;- rasterToPolygons(sample_raster, dissolve=TRUE) 4.1 SRS estimator srs_var_hat = kappa^2 * var(Data@data$d_i) / (nrow(Data@data)) ## standard error sqrt(srs_var_hat) ## [1] 397008.6 4.2 Correlation adjusted estimator 4.3 Boxlet estimator The first thing we need to do is calculate the fine lattice within \\(\\mathcal{D}\\) (these lattice points correspond to the centroids of the so-called boxlets). This is done using the ?BoxletEstimatorSamplingFrame function. This function will return a list containing a fine lattice for all the boxlets. The other function that will calculate the boxlet variance is ?BoxletEstimator. These are applied in the following code chunk. ## build lattice that we will evaluate the variance over ## for large survey areas can take a few seconds to a minute boxlet_frame_single = BoxletEstimatorSamplingFrame(survey_polygon, quad_width = quad_width, quad_height = quad_height, quad_x_spacing = quad_x_spacing, quad_y_spacing = quad_y_spacing, boxlet_per_sample_width = 1, boxlet_per_sample_height = 1, trace = F) ## use the boxlet_estimator_single = BoxletEstimator(spatial_df = Data, survey_polygon = survey_polygon, quad_width = quad_width, quad_height = quad_height, quad_x_spacing = quad_x_spacing, quad_y_spacing = quad_y_spacing, boxlet_sampling_frame = boxlet_frame_single) names(boxlet_estimator_single) ## [1] &quot;var_total_boxlet&quot; &quot;boxlet_df&quot; &quot;N_hat&quot; &quot;gam_N_hat&quot; ## standard error sqrt(boxlet_estimator_single$var_total_boxlet) ## [1] 84470.52 4.4 Geostatistical estimator Build a mesh INLA mesh mesh = inla.mesh.2d(max.edge = c(3,20), n =15, cutoff = 6, loc.domain = SpatialPoints( data.frame(x = c(0,0,100,100),y= c(0,100,100,0)))) ## don&#39;t give data points to the inla.mesh.2d function ## the triangulation mesh calculation will want to put all the vertices ## at observation locations due to the systematice shape plot(mesh) points(Data, col = &quot;red&quot;, pch = 16) Identify which cells to get the model to predict for proj_indicator = apply(gContains(samp_poly,proj_poly, byid = TRUE), 1, any) ## visualise colors &lt;- c(&quot;Domain&quot; = &quot;gold&quot;, &quot;Samples&quot; = &quot;blue&quot;, &quot;Projection&quot; = &quot;black&quot;) pop_outline = fortify(proj_poly) ## Regions defined for each Polygons sample_outline = fortify(samp_poly) ## Regions defined for each Polygons domain_area = data.frame(x = c(survey_xlim[1],survey_xlim[2], survey_xlim[2], survey_xlim[1],survey_xlim[1]), y = c(survey_ylim[1],survey_ylim[1],survey_ylim[2],survey_ylim[2],survey_ylim[1])) ggplot() + coord_fixed() + geom_path(aes(x = x, y = y, col=&quot;Domain&quot;), data = domain_area, size=1) + geom_path(aes(x = long, y = lat, group = group, col=&quot;Projection&quot;), data = pop_outline, size=1) + geom_path(aes(x = long, y = lat, group = group, col=&quot;Samples&quot;), data = sample_outline, size=1) + labs(x = &quot;x&quot;, y = &quot;y&quot;, color = &quot;&quot;)+ theme_void() + theme(legend.position=&quot;bottom&quot;, legend.text = element_text( size = 16)) + scale_color_manual(values = colors[1:3]) Fit the model ## create a projection data frame proj_df &lt;- as.data.frame(rasterToPoints(proj_raster, spatial = F)) proj_df$area = quad_width * quad_height proj_df$y_i = 0 ## dummy variable fit_poisson = tryCatch( expr = SpatialModelEstimator(spatial_df = Data, formula = y_i ~ 1, mesh = mesh, extrapolation_grid = proj_df, family = 0, link = 0, bias_correct = T, convergence = list(grad_tol = 0.001)), error = function(e) {e} ) "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
